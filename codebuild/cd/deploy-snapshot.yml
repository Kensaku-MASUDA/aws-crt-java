version: 0.2
#this buildspec assumes the ubuntu 14.04 trusty image
# This job is responsible for artifacting the JAR which will have all of the other shared libs stuffed
# into it once all platforms are built and artifacted
phases:
  install:
    commands:
      - sudo add-apt-repository ppa:openjdk-r/ppa
      - sudo apt-get update -y
      - sudo apt-get install openjdk-8-jdk-headless maven gnupg2 awscli -y -f
      # Warnings will pop up around SNIMissingWarning or InsecurePlatformWarning, if they actually
      # stop execution, we can install the python security wrappers
      #- sudo pip install 'requests[security]'

  pre_build:
    commands:
      - cd $CODEBUILD_SRC_DIR/aws-crt-java
      - export PKG_VERSION=$(git describe --abbrev=0 | cut -f2 -dv)
      - mkdir -p mvn-build
      - aws s3 cp --recursive s3://aws-crt-java-pipeline/v${PKG_VERSION}/lib $CODEBUILD_SRC_DIR/aws-crt-java/mvn-build/lib
      - cp -rv $CODEBUILD_SRC_DIR_linux_x64/dist/* $CODEBUILD_SRC_DIR/aws-crt-java/mvn-build/
      - cp -rv $CODEBUILD_SRC_DIR_linux_x86/dist/* $CODEBUILD_SRC_DIR/aws-crt-java/mvn-build/
      - ls -alR $CODEBUILD_SRC_DIR/aws-crt-java/mvn-build/lib
      # install settings.xml to ~/.m2/settings.xml
      - mkdir -p $HOME/.m2
      - aws s3 cp s3://code-sharing-aws-crt/aws-crt-java.settings.xml $HOME/.m2/settings.xml
      # import gpg key
      - aws s3 cp s3://code-sharing-aws-crt/aws-sdk-common-runtime.key.asc /tmp/aws-sdk-common-runtime.key.asc
      - gpg --import /tmp/aws-sdk-common-runtime.key.asc
      - export GPG_PASSPHRASE=$(aws --query "SecretString" secretsmanager get-secret-value --secret-id aws-sdk-common-runtime.key.asc/password | cut -f2 -d":" | sed -e 's/[\\\"\}]//g')
  build:
    commands:
      - cd $CODEBUILD_SRC_DIR/aws-crt-java
      # update the version to match the git tag, make a snapshot version we can test
      - mvn -B versions:set -DnewVersion=${PKG_VERSION}-SNAPSHOT
      # do a full build/deploy, but skip shared libs and tests, since the shared libs were artifacts above
      - mvn -B deploy -Prelease -Dshared-lib.skip=true -Dmaven.test.skip=true -Dgpg.passphrase=$GPG_PASSPHRASE
      # update the version to match the git tag, make a staging release which we will release once snapshot testing passes
      - mvn -B versions:set -DnewVersion=${PKG_VERSION}
      - mvn -B deploy -Prelease -Dshared-lib.skip=true -Dmaven.test.skip=true -Dgpg.passphrase=$GPG_PASSPHRASE
  post_build:
    commands:

artifacts:
  discard-paths: yes
  files:
    - $CODEBUILD_SRC_DIR/aws-crt-java/target/aws-crt-*.jar
    - $CODEBUILD_SRC_DIR/aws-crt-java/target/aws-crt-*.asc

cache:
  paths:
    - '/root/.m2/**/*'
